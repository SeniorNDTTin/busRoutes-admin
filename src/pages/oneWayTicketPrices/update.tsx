import { useEffect, useState } from "react";
import { useNavigate, useParams } from "react-router-dom";
import { toast } from "react-toastify";

import GoBack from "../../components/goBack";
import BoxHead from "../../components/boxHead";
import BoxInput from "../../components/boxInput";
import BoxCreate from "../../components/boxCreate";

import configs from "../../configs";
import oneWayTicketPriceService from "../../services/oneWayTicketPrices.ts";

function OneWayTicketPriceUpdate() {
  const { id } = useParams();
  const navigate = useNavigate();

  const [unitPrice, setUnitPrice] = useState("");
  const [busRouteId, setBusRouteId] = useState(""); // Th√™m state ƒë·ªÉ l∆∞u busRouteId

  useEffect(() => {
    const fetchPrice = async () => {
      try {
        const response = await oneWayTicketPriceService.getById(id as string);

        console.log("API Response:", response); // üëâ Xem d·ªØ li·ªáu tr·∫£ v·ªÅ t·ª´ API

        if (response.code === 200 && response.data) {
          setUnitPrice(response.data.unitPrice.toString());
          setBusRouteId(response.data.busRouteId); // L∆∞u busRouteId t·ª´ API
        } else {
          toast.error("Kh√¥ng t√¨m th·∫•y gi√° v√©!");
        }
      } catch (error) {
        console.error("L·ªói khi l·∫•y d·ªØ li·ªáu gi√° v√©:", error);
        toast.error("L·ªói khi l·∫•y d·ªØ li·ªáu gi√° v√©!");
      }
    };

    fetchPrice();
  }, [id]);

  const onChangeUnitPrice = (e: React.ChangeEvent<HTMLInputElement>) => {
    setUnitPrice(e.target.value);
  };

  const handleSubmit = async () => {
    if (!unitPrice) {
      toast.error("Ch∆∞a nh·∫≠p ƒë·ªß th√¥ng tin!");
      return;
    }
  
    try {
      const unitPriceValue = parseFloat(unitPrice);
      if (isNaN(unitPriceValue) || unitPriceValue <= 0) {
        toast.error("Gi√° v√© kh√¥ng h·ª£p l·ªá!");
        return;
      }
  
      // G·ª≠i c·∫£ unitPrice v√† busRouteId ƒë·ªÉ tr√°nh l·ªói 404
      const updateData = { unitPrice: unitPriceValue, busRouteId };
      console.log("D·ªØ li·ªáu g·ª≠i l√™n API:", updateData);
  
      const response = await oneWayTicketPriceService.update(id as string, updateData);
  
      console.log("API Update Response:", response); // Ki·ªÉm tra ph·∫£n h·ªìi t·ª´ API
  
      // ‚úÖ Ki·ªÉm tra n·∫øu API tr·∫£ v·ªÅ code 200 ho·∫∑c 201 th√¨ hi·ªÉn th·ªã th√†nh c√¥ng
      if (response.code === 200 || response.code === 201) {
        toast.success("C·∫≠p nh·∫≠t th√†nh c√¥ng!");
        navigate(`/${configs.prefixAdmin}/one-way-ticket-prices`);
      } else {
        toast.error("C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t!");
      }
    } catch (error) {
      console.error("L·ªói khi c·∫≠p nh·∫≠t gi√° v√©:", error);
      toast.error("L·ªói khi c·∫≠p nh·∫≠t d·ªØ li·ªáu!");
    }
  };
  

  return (
    <>
      <GoBack />
      <BoxHead title="C·∫≠p Nh·∫≠t Gi√° V√© M·ªôt Chi·ªÅu" />
      <BoxInput label="Gi√° v√©" value={unitPrice} onChange={onChangeUnitPrice} type="number" />
      <BoxCreate onClick={handleSubmit} />
    </>
  );
}

export default OneWayTicketPriceUpdate;
